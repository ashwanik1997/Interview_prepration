#######################################
# Project setup
#######################################

# Project name
PROJECT_NAME = STM32F429ZI_LVGL

# Target CPU
CPU = -mcpu=cortex-m4

# FPU
FPU = -mfpu=fpv4-sp-d16

# Float-ABI
FLOAT-ABI = -mfloat-abi=hard

# MCU
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# Debugging
DEBUG = 1

#######################################
# Build directory
#######################################

BUILD_DIR = build

#######################################
# Paths
#######################################

# STM32CubeF4 paths
CUBE_DIR = Drivers
HAL_DIR = $(CUBE_DIR)/STM32F4xx_HAL_Driver
CMSIS_DIR = $(CUBE_DIR)/CMSIS

# LVGL paths
LVGL_DIR = lvgl
LVGL_SRC_DIR = $(LVGL_DIR)/src
LVGL_CORE_DIR = $(LVGL_SRC_DIR)/core
LVGL_WIDGETS_DIR = $(LVGL_SRC_DIR)/widgets
LVGL_DRAW_DIR = $(LVGL_SRC_DIR)/draw
LVGL_FONT_DIR = $(LVGL_SRC_DIR)/font
LVGL_HAL_DIR = $(LVGL_SRC_DIR)/hal
LVGL_MISC_DIR = $(LVGL_SRC_DIR)/misc
LVGL_EXTRA_DIR = $(LVGL_DIR)/src/extra
LVGL_PORTING_DIR = $(LVGL_DIR)/porting

# Application paths
APP_DIR = Src
INC_DIRS = Inc

#######################################
# Source files
#######################################

# STM32 startup file
ASM_SOURCES = $(CMSIS_DIR)/Device/ST/STM32F4xx/Source/Templates/gcc/startup_stm32f429xx.s

# HAL sources
C_SOURCES = \
$(wildcard $(HAL_DIR)/Src/*.c) \
$(CMSIS_DIR)/Device/ST/STM32F4xx/Source/Templates/system_stm32f4xx.c

# Application sources
C_SOURCES += \
$(wildcard $(APP_DIR)/*.c)

# LVGL core sources
C_SOURCES += \
$(LVGL_CORE_DIR)/lv_obj.c \
$(LVGL_CORE_DIR)/lv_group.c \
$(LVGL_CORE_DIR)/lv_indev.c \
$(LVGL_CORE_DIR)/lv_disp.c \
$(LVGL_CORE_DIR)/lv_theme.c \
$(LVGL_CORE_DIR)/lv_refr.c \
$(LVGL_CORE_DIR)/lv_event.c \
$(LVGL_CORE_DIR)/lv_style.c

# LVGL widgets
C_SOURCES += \
$(wildcard $(LVGL_WIDGETS_DIR)/*.c)

# LVGL drawing
C_SOURCES += \
$(LVGL_DRAW_DIR)/lv_draw.c \
$(LVGL_DRAW_DIR)/lv_draw_rect.c \
$(LVGL_DRAW_DIR)/lv_draw_label.c \
$(LVGL_DRAW_DIR)/lv_draw_img.c \
$(LVGL_DRAW_DIR)/lv_draw_line.c \
$(LVGL_DRAW_DIR)/lv_draw_arc.c \
$(LVGL_DRAW_DIR)/lv_draw_triangle.c \
$(LVGL_DRAW_DIR)/lv_img_decoder.c \
$(LVGL_DRAW_DIR)/lv_img_cache.c

# LVGL fonts
C_SOURCES += \
$(wildcard $(LVGL_FONT_DIR)/*.c)

# LVGL HAL
C_SOURCES += \
$(LVGL_HAL_DIR)/lv_hal_disp.c \
$(LVGL_HAL_DIR)/lv_hal_indev.c \
$(LVGL_HAL_DIR)/lv_hal_tick.c

# LVGL misc
C_SOURCES += \
$(LVGL_MISC_DIR)/lv_anim.c \
$(LVGL_MISC_DIR)/lv_area.c \
$(LVGL_MISC_DIR)/lv_async.c \
$(LVGL_MISC_DIR)/lv_bidi.c \
$(LVGL_MISC_DIR)/lv_color.c \
$(LVGL_MISC_DIR)/lv_fs.c \
$(LVGL_MISC_DIR)/lv_gc.c \
$(LVGL_MISC_DIR)/lv_ll.c \
$(LVGL_MISC_DIR)/lv_log.c \
$(LVGL_MISC_DIR)/lv_math.c \
$(LVGL_MISC_DIR)/lv_mem.c \
$(LVGL_MISC_DIR)/lv_printf.c \
$(LVGL_MISC_DIR)/lv_style_gen.c \
$(LVGL_MISC_DIR)/lv_templ.c \
$(LVGL_MISC_DIR)/lv_timer.c \
$(LVGL_MISC_DIR)/lv_tlsf.c \
$(LVGL_MISC_DIR)/lv_utils.c

# LVGL extra (optional components)
C_SOURCES += \
$(wildcard $(LVGL_EXTRA_DIR)/*.c)

# LVGL porting layer
C_SOURCES += \
$(LVGL_PORTING_DIR)/lv_port_disp.c \
$(LVGL_PORTING_DIR)/lv_port_indev.c \
$(LVGL_PORTING_DIR)/lv_port_fs.c

#######################################
# Include paths
#######################################

C_INCLUDES = \
-I$(INC_DIRS) \
-I$(HAL_DIR)/Inc \
-I$(CMSIS_DIR)/Device/ST/STM32F4xx/Include \
-I$(CMSIS_DIR)/Include \
-I$(LVGL_DIR) \
-I$(LVGL_SRC_DIR) \
-I$(LVGL_PORTING_DIR)

#######################################
# Compiler flags
#######################################

# Optimization
ifeq ($(DEBUG), 1)
OPT = -Og
else
OPT = -Os
endif

# C defines
C_DEFS = \
-DUSE_HAL_DRIVER \
-DSTM32F429xx \
-DLV_CONF_INCLUDE_SIMPLE

# C flags
CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# Linker flags
#######################################

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(PROJECT_NAME).map,--cref -Wl,--gc-sections

# Linker script
LDSCRIPT = STM32F429ZITx_FLASH.ld

#######################################
# Tools
#######################################

PREFIX = arm-none-eabi-
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# Build the application
#######################################

# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))

# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

# default action: build all
all: $(BUILD_DIR)/$(PROJECT_NAME).elf $(BUILD_DIR)/$(PROJECT_NAME).hex $(BUILD_DIR)/$(PROJECT_NAME).bin

#######################################
# Build rules
#######################################

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR)
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(PROJECT_NAME).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir -p $@

#######################################
# Clean up
#######################################

clean:
	-rm -fR $(BUILD_DIR)

#######################################
# Dependencies
#######################################

-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***